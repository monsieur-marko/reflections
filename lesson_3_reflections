When would you want to use a remote repository rather than keeping all your work local?

I would use a remote repository when I want to share code with collaborators, showcase my projects, or intend to work on the codebase from multiple computers.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

If changes were made to the branch in the remote repository that you're not aware of, automatically pulling may create problems.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks: cloned and linked repository containing all files and commits as of the time forked. GitHub feature.
Clones: copy of a repository containing all files and commits as of the time forked. Git feature.
Branches: Local version of the repository developed in parallel with another branch. Git feature.

What is the benefit of having a copy of the last known state of the remote stored locally?

If you go offline and make changes to your local repo, you will know what the remote changes introduced in the interim affected. This makes it easier to merge code when you sync local with remote.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without these tools, I would collaborate using an email chain. The other possibility would be to use a traditional version control system, like Subversion.